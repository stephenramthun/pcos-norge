name: Run tests

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Install and build
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3

      - name: Cache node modules
        id: cache-node
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Cache cypress
        id: cache-cypress
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install Cypress
        if: steps.cache-cypress.outputs.cache-hit != 'true'
        run: npx cypress install

      - name: Build site
        run: npx turbo run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXT_PUBLIC_SANITY_DATASET: production
          NEXT_PUBLIC_SANITY_PROJECT_ID: 7bmjnb8i
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
          SANITY_PREVIEW_SECRET: ${{ secrets.SANITY_PREVIEW_SECRET }}
          VIPPS_CLIENT_ID: ${{ secrets.VIPPS_CLIENT_ID }}
          VIPPS_CLIENT_SECRET: ${{ secrets.VIPPS_CLIENT_SECRET }}
          VIPPS_WELL_KNOWN_URI: ${{ secrets.VIPPS_WELL_KNOWN_URI }}
          VIPPS_ACCESSTOKEN_ENDPOINT: ${{ secrets.VIPPS_ACCESSTOKEN_ENDPOINT }}
          VIPPS_RECURRING_PAYMENT_ENDPOINT: ${{ secrets.VIPPS_RECURRING_PAYMENT_ENDPOINT }}
          VIPPS_USERINFO_ENDPOINT: ${{ secrets.VIPPS_USERINFO_ENDPOINT }}
          VIPPS_REDIRECT_URI: ${{ secrets.VIPPS_REDIRECT_URI }}
          VIPPS_REGISTER_REDIRECT_URI: ${{ secrets.VIPPS_REGISTER_REDIRECT_URI }}
          VIPPS_MERCHANT_SERIAL_NUMBER: ${{ secrets.VIPPS_MERCHANT_SERIAL_NUMBER }}
          VIPPS_SUBSCRIPTION_KEY: ${{ secrets.VIPPS_SUBSCRIPTION_KEY }}
          SENDGRID_API_USERNAME: ${{ secrets.SENDGRID_API_USERNAME }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}

      - name: Save build folder
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: apps/site/.next
          if-no-files-found: error
          retention-days: 1

  run-unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-node
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run unit tests
        run: npm run test

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: coverage

  run-integration-tests:
    name: Run integration tests
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-node
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Cache Cypress binary
        id: cache-cypress
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/package.json') }}

      - name: Download the build folders
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: apps/site/.next

      - name: Install dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install cypress
        if: steps.cache-cypress.outputs.cache-hit != 'true'
        run: npx cypress install

      - name: Run integration tests
        run: npm run cy:test -w site

      - name: Archive Cypress artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: videos
          path: cypress/videos
