generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                String              @id @default(cuid())
  email             String              @unique
  emailVerified     Boolean?
  name              String
  givenName         String
  familyName        String
  birthdate         DateTime
  phoneNumber       String
  country           String
  region            String
  postalCode        String
  streetAddress     String
  createdAt         DateTime            @default(now())
  accounts          Account[]
  sessions          Session[]
  agreement         Agreement?
  EmailSubscription EmailSubscription[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Agreement {
  id        String          @id
  user      User            @relation(references: [id], fields: [userId])
  userId    String          @unique
  status    AgreementStatus @default(PENDING)
  start     String?
  stop      String?
  createdAt DateTime        @default(now())
  paidDate  DateTime?
  chargeId  String
}

enum AgreementStatus {
  ACTIVE
  PENDING
  EXPIRED
  STOPPED
}

model EmailSubscription {
  id     String           @id @default(cuid())
  user   User             @relation(references: [id], fields: [userId])
  userId String
  type   SubscriptionType
}

enum SubscriptionType {
  MEDLEMSBREV
  NYHETSBREV
}
